apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: update-catalog
spec:
  params:
    - name: snapshot
      type: string
    - name: release
      type: string
    - name: gitUrl
      type: string
      default: "https://github.com/raptorsun/lightspeed-operator.git"
    - name: branch
      type: string
      default: "fbc-update"
  tasks:
    - name: update-catalog
      taskSpec:
        params:
          - name: gitUrl
            type: string
          - name: branch
            type: string
          - name: snapshot
            type: string
          - name: release
            type: string
        steps:
          - name: git-clone
            image: docker.io/raptorsun/catalog-update:0.0.1
            script: |
              # todo: remove the hardcoded branch
              git clone --single-branch --branch main $(params.gitUrl) repo
              cd repo
              git checkout -b $(params.branch)
            workingDir: /workspace/source
            env:
              - name: HOME
                value: /workspace/source
          - name: update-catalog
            image: docker.io/raptorsun/catalog-update:0.0.1
            script: |
              set -e
              oc login --token=${KONFLUX_TOKEN} --server=https://api.stone-prd-rh01.pg1f.p1.openshiftapps.com:6443
              IFS='/' read -r RELEASE_NAMESPACE RELEASE_NAME <<< "$(params.release)"

              cd repo
              ./hack/bundle_to_catalog.sh -b $(params.snapshot) -n stable,alpha -c lightspeed-catalog-4.15/index.yaml
              ./hack/bundle_to_catalog.sh -b $(params.snapshot) -n stable,alpha -c lightspeed-catalog-4.16/index.yaml
              ./hack/bundle_to_catalog.sh -b $(params.snapshot) -n stable,alpha -c lightspeed-catalog-4.17/index.yaml -m
              ./hack/bundle_to_catalog.sh -b $(params.snapshot) -n stable,alpha -c lightspeed-catalog-4.18/index.yaml -m
              ./hack/bundle_to_catalog.sh -b $(params.snapshot) -n stable,alpha -c lightspeed-catalog-4.19/index.yaml -m

            workingDir: /workspace/source
            env:
              - name: KONFLUX_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: release-bot-konflux-token
                    key: konflux-token
              - name: HOME
                value: /workspace/source
          - name: git-config
            image: docker.io/raptorsun/catalog-update:0.0.1
            script: |
              cd repo
              git config user.email "hasun@redhat.com"
              git config user.name "Haoyu Sun's Bot"
            workingDir: /workspace/source
            env:
              - name: HOME
                value: /workspace/source
          - name: git-commit-push
            image: docker.io/raptorsun/catalog-update:0.0.1
            workingDir: /workspace/source
            env:
              - name: GITHUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: release-bot-github-token
                    key: github-token
              - name: HOME
                value: /workspace/source
            script: |
              set -e
              cd repo
              git add lightspeed-catalog-4.15/index.yaml lightspeed-catalog-4.16/index.yaml lightspeed-catalog-4.17/index.yaml \
                lightspeed-catalog-4.18/index.yaml lightspeed-catalog-4.19/index.yaml
              git commit -m "Update catalog with bundle snapshot $(params.snapshot)"
              git rev-parse HEAD | tee $(results.commit-id.path)
              git config --global credential.helper '!f() { sleep 1; echo "username=git"; echo "password=$GITHUB_TOKEN"; }; f'
              git push --force origin $(params.branch)
              # todo: remove the hardcoded PR title, body, and head fork name
              RESPONSE=$(curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/openshift/lightspeed-operator/pulls \
                -d '{"title":"[Do Not Merge] Test Konflux Catalog Update by Bundle Snapshot $(params.snapshot)","body":"Do not merge!","head":"raptorsun:$(params.branch)","base":"main"}' )
              echo "Github response: \n $RESPONSE"
              jq -r '.html_url' <<< $RESPONSE | tee $(results.pull-request-url.path)
        results:
          - name: commit-id
            description: The commit ID where bundle is updated
          - name: pull-request-url
            description: The URL of the created pull request
      params:
        - name: gitUrl
          value: $(params.gitUrl)
        - name: branch
          value: $(params.branch)
        - name: snapshot
          value: $(params.snapshot)
        - name: release
          value: $(params.release)
      workspaces:
        - name: source
  workspaces:
    - name: source
  results:
    - name: commit-id
      description: The commit ID where bundle is updated
      value: "$(tasks.update-catalog.results.commit-id)"
    - name: pull-request-url
      description: The URL of the created pull request
      value: "$(tasks.update-catalog.results.pull-request-url)"
